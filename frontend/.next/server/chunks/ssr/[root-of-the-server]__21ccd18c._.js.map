{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///Users/ralphforgeon/Documents/honeypot/frontend/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file:///Users/ralphforgeon/Documents/honeypot/frontend/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"sources":["file:///Users/ralphforgeon/Documents/honeypot/frontend/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 201, "column": 0}, "map": {"version":3,"sources":["file:///Users/ralphforgeon/Documents/honeypot/frontend/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Tabs({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return (\n    <TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TabsList({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\"flex-1 outline-none\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,8OAAC,gKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,8OAAC,gKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uGACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,gKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mqBACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,gKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 265, "column": 0}, "map": {"version":3,"sources":["file:///Users/ralphforgeon/Documents/honeypot/frontend/src/components/ui/accordion.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDownIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Accordion({\n  ...props\n}: React.ComponentProps<typeof AccordionPrimitive.Root>) {\n  return <AccordionPrimitive.Root data-slot=\"accordion\" {...props} />\n}\n\nfunction AccordionItem({\n  className,\n  ...props\n}: React.ComponentProps<typeof AccordionPrimitive.Item>) {\n  return (\n    <AccordionPrimitive.Item\n      data-slot=\"accordion-item\"\n      className={cn(\"border-b last:border-b-0\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction AccordionTrigger({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof AccordionPrimitive.Trigger>) {\n  return (\n    <AccordionPrimitive.Header className=\"flex\">\n      <AccordionPrimitive.Trigger\n        data-slot=\"accordion-trigger\"\n        className={cn(\n          \"focus-visible:border-ring focus-visible:ring-ring/50 flex flex-1 items-start justify-between gap-4 rounded-md py-4 text-left text-sm font-medium transition-all outline-none hover:underline focus-visible:ring-[3px] disabled:pointer-events-none disabled:opacity-50 [&[data-state=open]>svg]:rotate-180\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n        <ChevronDownIcon className=\"text-muted-foreground pointer-events-none size-4 shrink-0 translate-y-0.5 transition-transform duration-200\" />\n      </AccordionPrimitive.Trigger>\n    </AccordionPrimitive.Header>\n  )\n}\n\nfunction AccordionContent({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof AccordionPrimitive.Content>) {\n  return (\n    <AccordionPrimitive.Content\n      data-slot=\"accordion-content\"\n      className=\"data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down overflow-hidden text-sm\"\n      {...props}\n    >\n      <div className={cn(\"pt-0 pb-4\", className)}>{children}</div>\n    </AccordionPrimitive.Content>\n  )\n}\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n"],"names":[],"mappings":";;;;;;;AAGA;AACA;AAEA;AANA;;;;;AAQA,SAAS,UAAU,EACjB,GAAG,OACkD;IACrD,qBAAO,8OAAC,qKAAA,CAAA,OAAuB;QAAC,aAAU;QAAa,GAAG,KAAK;;;;;;AACjE;AAEA,SAAS,cAAc,EACrB,SAAS,EACT,GAAG,OACkD;IACrD,qBACE,8OAAC,qKAAA,CAAA,OAAuB;QACtB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,iBAAiB,EACxB,SAAS,EACT,QAAQ,EACR,GAAG,OACqD;IACxD,qBACE,8OAAC,qKAAA,CAAA,SAAyB;QAAC,WAAU;kBACnC,cAAA,8OAAC,qKAAA,CAAA,UAA0B;YACzB,aAAU;YACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8SACA;YAED,GAAG,KAAK;;gBAER;8BACD,8OAAC,wNAAA,CAAA,kBAAe;oBAAC,WAAU;;;;;;;;;;;;;;;;;AAInC;AAEA,SAAS,iBAAiB,EACxB,SAAS,EACT,QAAQ,EACR,GAAG,OACqD;IACxD,qBACE,8OAAC,qKAAA,CAAA,UAA0B;QACzB,aAAU;QACV,WAAU;QACT,GAAG,KAAK;kBAET,cAAA,8OAAC;YAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,aAAa;sBAAa;;;;;;;;;;;AAGnD","debugId":null}},
    {"offset": {"line": 355, "column": 0}, "map": {"version":3,"sources":["file:///Users/ralphforgeon/Documents/honeypot/frontend/src/lib/api.ts"],"sourcesContent":["const API_BASE_URL = 'http://localhost:8000/api';\n\nexport interface Run {\n  id: string;\n  timestamp: string;\n  status: 'completed' | 'running' | 'failed';\n  iterations: number;\n  interactions: any[];\n}\n\nexport interface Config {\n  iterations: number;\n  api_keys: {\n    openai?: string;\n    anthropic?: string;\n    google?: string;\n  };\n  attacker_model: {\n    provider: string;\n    model_name: string;\n    temperature?: number;\n    use_attack_chains?: boolean;\n  };\n  defender_model: {\n    provider: string;\n    model_name: string;\n    temperature?: number;\n  };\n  results_dir: string;\n  reasoning_request_mode?: 'always' | 'detected' | 'never';\n}\n\n// API Functions\nexport async function getRuns(): Promise<string[]> {\n  const response = await fetch(`${API_BASE_URL}/runs`);\n  if (!response.ok) {\n    throw new Error('Failed to fetch runs');\n  }\n  const data = await response.json();\n  return data.data.runs;\n}\n\nexport async function getRunResult(runId: string): Promise<any> {\n  const response = await fetch(`${API_BASE_URL}/runs/${runId}`);\n  if (!response.ok) {\n    throw new Error(`Failed to fetch run ${runId}`);\n  }\n  const data = await response.json();\n  return data.data;\n}\n\nexport async function getConfig(): Promise<Config> {\n  const response = await fetch(`${API_BASE_URL}/config`);\n  if (!response.ok) {\n    throw new Error('Failed to fetch config');\n  }\n  const data = await response.json();\n  return data.data;\n}\n\nexport async function updateConfig(config: Config): Promise<Config> {\n  const response = await fetch(`${API_BASE_URL}/config`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(config),\n  });\n  if (!response.ok) {\n    throw new Error('Failed to update config');\n  }\n  const data = await response.json();\n  return data.data;\n}\n\nexport async function startRun(): Promise<{ run_id: string }> {\n  const response = await fetch(`${API_BASE_URL}/run/start`, {\n    method: 'POST',\n  });\n  if (!response.ok) {\n    throw new Error('Failed to start run');\n  }\n  const data = await response.json();\n  \n  // Handle the placeholder run ID\n  const runId = data.data.run_id;\n  if (runId === 'new_run_placeholder') {\n    // If we got a placeholder, wait a moment for the backend to set up the actual run\n    // Then redirect to the runs list instead of a specific run\n    return { run_id: '' };\n  }\n  \n  return data.data;\n}\n\nexport async function getRunStatus(runId: string): Promise<any> {\n  const response = await fetch(`${API_BASE_URL}/run/${runId}/status`);\n  if (!response.ok) {\n    throw new Error(`Failed to fetch status for run ${runId}`);\n  }\n  const data = await response.json();\n  return data.data;\n}\n\nexport async function stopRun(runId: string): Promise<{ stopped: boolean }> {\n  const response = await fetch(`${API_BASE_URL}/run/${runId}/stop`, {\n    method: 'POST',\n  });\n  if (!response.ok) {\n    throw new Error(`Failed to stop run ${runId}`);\n  }\n  const data = await response.json();\n  return data.data;\n} "],"names":[],"mappings":";;;;;;;;;AAAA,MAAM,eAAe;AAiCd,eAAe;IACpB,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,KAAK,CAAC;IACnD,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM;IAClB;IACA,MAAM,OAAO,MAAM,SAAS,IAAI;IAChC,OAAO,KAAK,IAAI,CAAC,IAAI;AACvB;AAEO,eAAe,aAAa,KAAa;IAC9C,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,MAAM,EAAE,OAAO;IAC5D,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,OAAO;IAChD;IACA,MAAM,OAAO,MAAM,SAAS,IAAI;IAChC,OAAO,KAAK,IAAI;AAClB;AAEO,eAAe;IACpB,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,OAAO,CAAC;IACrD,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM;IAClB;IACA,MAAM,OAAO,MAAM,SAAS,IAAI;IAChC,OAAO,KAAK,IAAI;AAClB;AAEO,eAAe,aAAa,MAAc;IAC/C,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,OAAO,CAAC,EAAE;QACrD,QAAQ;QACR,SAAS;YACP,gBAAgB;QAClB;QACA,MAAM,KAAK,SAAS,CAAC;IACvB;IACA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM;IAClB;IACA,MAAM,OAAO,MAAM,SAAS,IAAI;IAChC,OAAO,KAAK,IAAI;AAClB;AAEO,eAAe;IACpB,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,UAAU,CAAC,EAAE;QACxD,QAAQ;IACV;IACA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM;IAClB;IACA,MAAM,OAAO,MAAM,SAAS,IAAI;IAEhC,gCAAgC;IAChC,MAAM,QAAQ,KAAK,IAAI,CAAC,MAAM;IAC9B,IAAI,UAAU,uBAAuB;QACnC,kFAAkF;QAClF,2DAA2D;QAC3D,OAAO;YAAE,QAAQ;QAAG;IACtB;IAEA,OAAO,KAAK,IAAI;AAClB;AAEO,eAAe,aAAa,KAAa;IAC9C,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,KAAK,EAAE,MAAM,OAAO,CAAC;IAClE,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM,CAAC,+BAA+B,EAAE,OAAO;IAC3D;IACA,MAAM,OAAO,MAAM,SAAS,IAAI;IAChC,OAAO,KAAK,IAAI;AAClB;AAEO,eAAe,QAAQ,KAAa;IACzC,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,KAAK,EAAE,MAAM,KAAK,CAAC,EAAE;QAChE,QAAQ;IACV;IACA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM,CAAC,mBAAmB,EAAE,OAAO;IAC/C;IACA,MAAM,OAAO,MAAM,SAAS,IAAI;IAChC,OAAO,KAAK,IAAI;AAClB","debugId":null}},
    {"offset": {"line": 446, "column": 0}, "map": {"version":3,"sources":["file:///Users/ralphforgeon/Documents/honeypot/frontend/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border px-4 py-3 text-sm grid has-[>svg]:grid-cols-[calc(var(--spacing)*4)_1fr] grid-cols-[0_1fr] has-[>svg]:gap-x-3 gap-y-0.5 items-start [&>svg]:size-4 [&>svg]:translate-y-0.5 [&>svg]:text-current\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-card text-card-foreground\",\n        destructive:\n          \"text-destructive bg-card [&>svg]:text-current *:data-[slot=alert-description]:text-destructive/90\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Alert({\n  className,\n  variant,\n  ...props\n}: React.ComponentProps<\"div\"> & VariantProps<typeof alertVariants>) {\n  return (\n    <div\n      data-slot=\"alert\"\n      role=\"alert\"\n      className={cn(alertVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-title\"\n      className={cn(\n        \"col-start-2 line-clamp-1 min-h-4 font-medium tracking-tight\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDescription({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-description\"\n      className={cn(\n        \"text-muted-foreground col-start-2 grid justify-items-start gap-1 text-sm [&_p]:leading-relaxed\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,qOACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,GAAG,OAC8D;IACjE,qBACE,8OAAC;QACC,aAAU;QACV,MAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+DACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,iBAAiB,EACxB,SAAS,EACT,GAAG,OACyB;IAC5B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kGACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 511, "column": 0}, "map": {"version":3,"sources":["file:///Users/ralphforgeon/Documents/honeypot/frontend/src/app/runs/%5Bid%5D/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport Link from \"next/link\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from \"@/components/ui/accordion\";\nimport { getRunResult, getRuns } from \"@/lib/api\";\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\n\ninterface Interaction {\n  attacker_prompt: string;\n  defender_response: string;\n  reasoning_request?: string;\n  defender_reasoning?: string;\n  analysis?: {\n    is_aligned?: boolean;\n    confidence_score?: number;\n    harm_categories?: string[];\n    attack_strategy?: string;\n    explanation?: string;\n    attack_goals?: string[];\n    attack_success?: boolean;\n  };\n}\n\n// Keeping this interface for future use, but marking it as unused to avoid linter errors\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ninterface Vulnerability {\n  name: string;\n  severity?: 'high' | 'medium' | 'low';\n  category?: string;\n  description: string;\n  success_rate?: number;\n  examples?: string[];\n  mitigation?: string;\n}\n\ninterface RoundData {\n  id: string;\n  roundNumber?: number;\n  data: {\n    timestamp?: string;\n    interactions?: Interaction[];\n    round_analysis?: string;\n    metadata?: {\n      current_round?: number | string;\n    };\n  };\n}\n\ninterface RunDataType {\n  timestamp?: string;\n  iterations?: number;\n  attacker_model?: {\n    model_name?: string;\n    provider?: string;\n    temperature?: number;\n    use_attack_chains?: boolean;\n  };\n  defender_model?: {\n    model_name?: string;\n    provider?: string;\n    temperature?: number;\n  };\n  reasoning_request_mode?: string;\n  run_duration?: number | string;\n  success_rate?: number;\n  summary?: {\n    vulnerabilities?: Array<{\n      name: string;\n      severity?: 'high' | 'medium' | 'low';\n      category?: string;\n      description: string;\n      success_rate?: number;\n      examples?: string[];\n      mitigation?: string;\n    }>;\n    key_findings?: string[];\n    recommendations?: string[];\n    [key: string]: unknown;\n  };\n}\n\nexport default function RunDetailPage({ params }: { params: { id: string } }) {\n  const runId = params.id;\n  \n  const [mainRunData, setMainRunData] = useState<RunDataType | null>(null);\n  const [roundsData, setRoundsData] = useState<RoundData[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    async function loadRunDetails() {\n      try {\n        setLoading(true);\n        console.log(\"Loading run details for:\", runId);\n        \n        // Get all runs\n        const allRuns = await getRuns();\n        console.log(\"All runs:\", allRuns);\n        \n        // Extract the base part of the run ID (without timestamp)\n        const baseMatch = runId.match(/(honeypot_.+_vs_.+)_\\d+/);\n        const basePrefix = baseMatch ? baseMatch[1] : runId;\n        \n        // Filter to find round files\n        const relatedRoundIds = allRuns\n          .filter(run => {\n            // Include the main run file\n            if (run === `${runId}.json`) return true;\n            \n            // Include files with _round in the name\n            if (run.includes(\"_round\")) {\n              // Check if it's directly related to this run\n              if (run.startsWith(runId + \"_round\")) return true;\n              \n              // Check if it shares the same base pattern (model names)\n              if (basePrefix && run.includes(basePrefix)) {\n                console.log(\"Found related round with base match:\", run);\n                return true;\n              }\n            }\n            \n            return false;\n          })\n          .map(run => run.replace(\".json\", \"\"));\n        \n        console.log(\"Related round IDs:\", relatedRoundIds);\n        \n        // Load main run data\n        const mainData = await getRunResult(`${runId}.json`);\n        setMainRunData(mainData);\n        \n        // Load round data\n        const roundsPromises = relatedRoundIds\n          .filter(roundId => roundId !== runId) // Exclude the main run\n          .map(async (roundId) => {\n            try {\n              console.log(`Loading round data for: ${roundId}`);\n              const data = await getRunResult(`${roundId}.json`);\n              \n              // Extract round number from filename or metadata\n              let roundNum = 0;\n              const roundMatch = roundId.match(/_round(\\d+)/);\n              if (roundMatch && roundMatch[1]) {\n                roundNum = parseInt(roundMatch[1]);\n              } else if (data.metadata?.current_round) {\n                const metaRound = data.metadata.current_round;\n                if (typeof metaRound === 'number') {\n                  roundNum = metaRound;\n                } else if (typeof metaRound === 'string' && metaRound !== 'complete') {\n                  const parsed = parseInt(metaRound);\n                  if (!isNaN(parsed)) roundNum = parsed;\n                }\n              }\n              \n              console.log(`Round ${roundNum} data loaded successfully`);\n              return { \n                id: roundId, \n                data,\n                roundNumber: roundNum \n              } as RoundData;\n            } catch (e) {\n              console.error(`Failed to load round ${roundId}`, e);\n              return null;\n            }\n          });\n        \n        const roundsResults = await Promise.all(roundsPromises);\n        \n        // Sort rounds by round number\n        const validRoundData = roundsResults\n          .filter((item): item is RoundData => item !== null)\n          .sort((a, b) => {\n            const roundNumA = a.roundNumber || 0;\n            const roundNumB = b.roundNumber || 0;\n            return roundNumA - roundNumB;\n          });\n          \n        console.log(`Found ${validRoundData.length} valid rounds`);\n        setRoundsData(validRoundData);\n        \n        setError(null);\n      } catch (err) {\n        setError(\"Failed to load run details. Please try again later.\");\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    loadRunDetails();\n  }, [runId]);\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-64\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-gray-900\"></div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <Alert variant=\"destructive\" className=\"mb-4\">\n        <AlertTitle>Error</AlertTitle>\n        <AlertDescription>{error}</AlertDescription>\n      </Alert>\n    );\n  }\n\n  if (!mainRunData) {\n    return (\n      <div className=\"text-center p-8\">\n        <h1 className=\"text-2xl font-bold mb-4\">Run not found</h1>\n        <Link href=\"/runs\">\n          <Button>Back to Runs</Button>\n        </Link>\n      </div>\n    );\n  }\n\n  // Extract metadata\n  const metadata = {\n    id: runId,\n    timestamp: mainRunData.timestamp || \"Unknown\",\n    iterations: mainRunData.iterations || roundsData.length || 0,\n    attackerModel: mainRunData.attacker_model?.model_name || \"Unknown\",\n    defenderModel: mainRunData.defender_model?.model_name || \"Unknown\",\n    attackerProvider: mainRunData.attacker_model?.provider || \"Unknown\",\n    defenderProvider: mainRunData.defender_model?.provider || \"Unknown\",\n    attackerTemperature: mainRunData.attacker_model?.temperature,\n    defenderTemperature: mainRunData.defender_model?.temperature,\n    useAttackChains: mainRunData.attacker_model?.use_attack_chains ? \"Yes\" : \"No\",\n    reasoningRequestMode: mainRunData.reasoning_request_mode || \"Unknown\",\n    runDuration: mainRunData.run_duration || \"Unknown\",\n    successRate: mainRunData.success_rate,\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight\">{metadata.id}</h1>\n          <p className=\"text-sm text-muted-foreground\">\n            Run completed on {metadata.timestamp}\n          </p>\n        </div>\n        <Link href=\"/runs\">\n          <Button variant=\"outline\">Back to Runs</Button>\n        </Link>\n      </div>\n\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle>Rounds</CardTitle>\n            <CardDescription>Total testing rounds</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{roundsData.length || metadata.iterations}</div>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle>Duration</CardTitle>\n            <CardDescription>Total run time</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{typeof metadata.runDuration === 'number' ? `${metadata.runDuration.toFixed(2)}s` : metadata.runDuration}</div>\n          </CardContent>\n        </Card>\n        \n        {metadata.successRate !== undefined && (\n          <Card>\n            <CardHeader className=\"pb-2\">\n              <CardTitle>Success Rate</CardTitle>\n              <CardDescription>Attack successful rate</CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold\">{typeof metadata.successRate === 'number' ? `${(metadata.successRate * 100).toFixed(1)}%` : metadata.successRate}</div>\n            </CardContent>\n          </Card>\n        )}\n        \n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle>Reasoning Mode</CardTitle>\n            <CardDescription>When reasoning is requested</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold capitalize\">{metadata.reasoningRequestMode}</div>\n          </CardContent>\n        </Card>\n      </div>\n      \n      <div className=\"grid gap-4 md:grid-cols-2\">\n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle>Attacker Model</CardTitle>\n            <CardDescription>Model generating honeypots</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between\">\n                <span className=\"font-medium\">Model:</span>\n                <span>{metadata.attackerModel}</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"font-medium\">Provider:</span>\n                <span>{metadata.attackerProvider}</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"font-medium\">Temperature:</span>\n                <span>{metadata.attackerTemperature !== undefined ? metadata.attackerTemperature : 'Default'}</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"font-medium\">Attack Chains:</span>\n                <span>{metadata.useAttackChains}</span>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle>Defender Model</CardTitle>\n            <CardDescription>Model being tested</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between\">\n                <span className=\"font-medium\">Model:</span>\n                <span>{metadata.defenderModel}</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"font-medium\">Provider:</span>\n                <span>{metadata.defenderProvider}</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"font-medium\">Temperature:</span>\n                <span>{metadata.defenderTemperature !== undefined ? metadata.defenderTemperature : 'Default'}</span>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      <Card>\n        <CardHeader>\n          <CardTitle>Run Summary</CardTitle>\n          <CardDescription>\n            Overview of all testing rounds\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <Tabs defaultValue=\"rounds\" className=\"w-full\">\n            <TabsList className=\"mb-4\">\n              <TabsTrigger value=\"rounds\">Rounds</TabsTrigger>\n              <TabsTrigger value=\"summary\">Summary</TabsTrigger>\n              {mainRunData.summary && <TabsTrigger value=\"analysis\">Analysis</TabsTrigger>}\n            </TabsList>\n            \n            <TabsContent value=\"rounds\">\n              {roundsData.length === 0 ? (\n                <div className=\"text-center p-8\">\n                  <p className=\"text-muted-foreground mb-4\">No individual rounds found for this run</p>\n                </div>\n              ) : (\n                <Accordion type=\"single\" collapsible className=\"w-full\">\n                  {roundsData.map((round, roundIndex) => (\n                    <AccordionItem key={round.id} value={`round-${roundIndex}`}>\n                      <AccordionTrigger>\n                        <div className=\"flex items-center justify-between w-full pr-4\">\n                          <div className=\"font-medium\">\n                            Round {round.roundNumber || roundIndex + 1}\n                            {round.data.timestamp && (\n                              <span className=\"text-xs text-muted-foreground ml-2\">\n                                {new Date(round.data.timestamp).toLocaleString()}\n                              </span>\n                            )}\n                          </div>\n                          <div className=\"text-sm text-muted-foreground\">\n                            {round.data.interactions?.some(i => i.analysis?.is_aligned === false) ? \n                              <span className=\"text-red-500 font-medium\">⚠️ Contains potentially unsafe responses</span> :\n                              <span className=\"text-green-500 font-medium\">✓ All responses safe</span>\n                            }\n                          </div>\n                        </div>\n                      </AccordionTrigger>\n                      <AccordionContent>\n                        {/* Round analysis section */}\n                        <div className=\"space-y-6\">\n                          <Card>\n                            <CardHeader className=\"pb-2\">\n                              <CardTitle>Round Analysis</CardTitle>\n                              <CardDescription>Overall assessment of this round</CardDescription>\n                            </CardHeader>\n                            <CardContent>\n                              <div className=\"space-y-4\">\n                                <div className=\"grid grid-cols-2 gap-4\">\n                                  <div>\n                                    <p className=\"text-sm font-medium\">Safe Responses:</p>\n                                    <p className=\"text-2xl font-bold text-green-500\">\n                                      {round.data.interactions?.filter(i => i.analysis?.is_aligned).length || 0}\n                                    </p>\n                                  </div>\n                                  <div>\n                                    <p className=\"text-sm font-medium\">Unsafe Responses:</p>\n                                    <p className=\"text-2xl font-bold text-red-500\">\n                                      {round.data.interactions?.filter(i => i.analysis?.is_aligned === false).length || 0}\n                                    </p>\n                                  </div>\n                                </div>\n                                \n                                {/* Alignment Analysis Summary */}\n                                {round.data.interactions?.some(i => i.analysis) && (\n                                  <div className=\"border p-4 rounded-md bg-gray-50 space-y-3\">\n                                    <h4 className=\"text-sm font-medium\">Alignment Analysis</h4>\n                                    \n                                    {/* Confidence Scores */}\n                                    <div className=\"space-y-1\">\n                                      <p className=\"text-xs font-medium text-muted-foreground\">Confidence Scores:</p>\n                                      <div className=\"flex flex-wrap gap-2\">\n                                        {round.data.interactions?.map((interaction, idx) => \n                                          interaction.analysis?.confidence_score !== undefined && (\n                                            <div \n                                              key={idx} \n                                              className={`text-xs px-2 py-1 rounded-md ${\n                                                interaction.analysis.is_aligned \n                                                  ? 'bg-green-100 text-green-800' \n                                                  : 'bg-red-100 text-red-800'\n                                              }`}\n                                            >\n                                              {(interaction.analysis.confidence_score * 100).toFixed(0)}%\n                                            </div>\n                                          )\n                                        )}\n                                      </div>\n                                    </div>\n                                    \n                                    {/* Detection Tags */}\n                                    <div className=\"space-y-1\">\n                                      <p className=\"text-xs font-medium text-muted-foreground\">Detection Tags:</p>\n                                      <div className=\"flex flex-wrap gap-2\">\n                                        {(() => {\n                                          const detectionTags = new Set<string>();\n                                          round.data.interactions?.forEach(interaction => {\n                                            if (interaction.analysis?.harm_categories) {\n                                              interaction.analysis.harm_categories.forEach(cat => \n                                                detectionTags.add(cat)\n                                              );\n                                            }\n                                          });\n                                          return Array.from(detectionTags).map((tag, idx) => (\n                                            <div key={idx} className=\"bg-orange-100 text-orange-800 text-xs px-2 py-1 rounded-md\">\n                                              {tag}\n                                            </div>\n                                          ));\n                                        })()}\n                                      </div>\n                                    </div>\n                                    \n                                    {/* Attack Strategies */}\n                                    <div className=\"space-y-1\">\n                                      <p className=\"text-xs font-medium text-muted-foreground\">Attack Strategies:</p>\n                                      <div className=\"flex flex-wrap gap-2\">\n                                        {(() => {\n                                          const strategies = new Set<string>();\n                                          round.data.interactions?.forEach(interaction => {\n                                            if (interaction.analysis?.attack_strategy) {\n                                              strategies.add(interaction.analysis.attack_strategy);\n                                            }\n                                          });\n                                          return Array.from(strategies).map((strategy, idx) => (\n                                            <div key={idx} className=\"bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded-md\">\n                                              {strategy}\n                                            </div>\n                                          ));\n                                        })()}\n                                      </div>\n                                    </div>\n                                  </div>\n                                )}\n                                \n                                {round.data.round_analysis && (\n                                  <div className=\"bg-gray-50 p-4 rounded-md\">\n                                    <p className=\"text-sm font-medium mb-1\">Analysis Notes:</p>\n                                    <p className=\"text-sm\">{round.data.round_analysis}</p>\n                                  </div>\n                                )}\n                              </div>\n                            </CardContent>\n                          </Card>\n                          \n                          {/* Interactions section */}\n                          <div className=\"space-y-4 mt-4\">\n                            <h3 className=\"text-lg font-medium\">Round Interactions</h3>\n                            \n                            {round.data.interactions?.map((interaction, index) => (\n                              <Accordion type=\"single\" collapsible className=\"w-full\" key={index}>\n                                <AccordionItem value={`interaction-${index}`}>\n                                  <AccordionTrigger className=\"py-3\">\n                                    <div className=\"flex items-center gap-2 text-left\">\n                                      <div \n                                        className={`w-2 h-2 rounded-full ${\n                                          interaction.analysis?.is_aligned === false \n                                            ? 'bg-red-500' \n                                            : 'bg-green-500'\n                                        }`} \n                                      />\n                                      <div>\n                                        <span className=\"font-medium\">Interaction {index + 1}</span>\n                                        {interaction.analysis?.attack_strategy && (\n                                          <span className=\"text-xs text-muted-foreground ml-2\">\n                                            Strategy: {interaction.analysis.attack_strategy}\n                                          </span>\n                                        )}\n                                      </div>\n                                    </div>\n                                  </AccordionTrigger>\n                                  <AccordionContent className=\"pb-4\">\n                                    <div className=\"space-y-3 mt-2\">\n                                      {/* Interaction Flow */}\n                                      <div className=\"bg-slate-50 p-3 rounded-md\">\n                                        <p className=\"text-sm font-medium mb-1\">Attacker Prompt:</p>\n                                        <p className=\"text-sm whitespace-pre-wrap\">{interaction.attacker_prompt}</p>\n                                      </div>\n                                      \n                                      <div className=\"bg-blue-50 p-3 rounded-md\">\n                                        <p className=\"text-sm font-medium mb-1\">Defender Response:</p>\n                                        <p className=\"text-sm whitespace-pre-wrap\">{interaction.defender_response}</p>\n                                      </div>\n                                      \n                                      {interaction.defender_reasoning && (\n                                        <div className=\"bg-purple-50 p-3 rounded-md\">\n                                          <p className=\"text-sm font-medium mb-1\">Defender Reasoning:</p>\n                                          <p className=\"text-sm whitespace-pre-wrap\">{interaction.defender_reasoning}</p>\n                                        </div>\n                                      )}\n                                      \n                                      {/* Alignment Analysis Details */}\n                                      {interaction.analysis && (\n                                        <div className=\"mt-4 border rounded-md p-3\">\n                                          <p className=\"text-sm font-medium mb-2\">Analysis Details:</p>\n                                          <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                                            <div>\n                                              <p className=\"text-xs font-medium\">Alignment:</p>\n                                              <p className={`${interaction.analysis.is_aligned ? 'text-green-500' : 'text-red-500'}`}>\n                                                {interaction.analysis.is_aligned ? 'Aligned' : 'Potentially misaligned'}\n                                              </p>\n                                            </div>\n                                            <div>\n                                              <p className=\"text-xs font-medium\">Confidence:</p>\n                                              <p>{interaction.analysis.confidence_score !== undefined ? \n                                                  `${(interaction.analysis.confidence_score * 100).toFixed(0)}%` : \n                                                  'N/A'}\n                                              </p>\n                                            </div>\n                                            \n                                            {interaction.analysis.explanation && (\n                                              <div className=\"col-span-2\">\n                                                <p className=\"text-xs font-medium\">Explanation:</p>\n                                                <p className=\"text-xs mt-1\">{interaction.analysis.explanation}</p>\n                                              </div>\n                                            )}\n                                            \n                                            {interaction.analysis.harm_categories && interaction.analysis.harm_categories.length > 0 && (\n                                              <div className=\"col-span-2\">\n                                                <p className=\"text-xs font-medium\">Harm Categories:</p>\n                                                <div className=\"flex flex-wrap gap-1 mt-1\">\n                                                  {interaction.analysis.harm_categories.map((category, i) => (\n                                                    <span key={i} className=\"bg-red-100 text-red-800 text-xs px-2 py-1 rounded\">\n                                                      {category}\n                                                    </span>\n                                                  ))}\n                                                </div>\n                                              </div>\n                                            )}\n                                          </div>\n                                        </div>\n                                      )}\n                                    </div>\n                                  </AccordionContent>\n                                </AccordionItem>\n                              </Accordion>\n                            ))}\n                          </div>\n                        </div>\n                      </AccordionContent>\n                    </AccordionItem>\n                  ))}\n                </Accordion>\n              )}\n            </TabsContent>\n            \n            <TabsContent value=\"summary\">\n              <div className=\"space-y-4\">\n                {/* Summary content */}\n              </div>\n            </TabsContent>\n            \n            {mainRunData.summary && (\n              <TabsContent value=\"analysis\">\n                {/* Analysis content */}\n              </TabsContent>\n            )}\n          </Tabs>\n        </CardContent>\n      </Card>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}}]
}